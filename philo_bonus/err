==697== Memcheck, a memory error detector
==697== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==697== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==697== Command: ./philo_bonus 5 500 300 100
==697== 
==699== 
==699== Process terminating with default action of signal 11 (SIGSEGV)
==699==  Access not within mapped region at address 0x402C000
==699==    at 0x4861552: __new_sem_wait_slow.constprop.0 (sem_waitcommon.c:204)
==699==    by 0x10A208: take_right_fork (in /home/vscode/src/philo_bonus)
==699==    by 0x10A255: take_forks (in /home/vscode/src/philo_bonus)
==699==    by 0x10A0B8: eating (in /home/vscode/src/philo_bonus)
==699==    by 0x109FD5: philo_routine (in /home/vscode/src/philo_bonus)
==699==    by 0x109D32: init_philos (in /home/vscode/src/philo_bonus)
==699==    by 0x109686: main (in /home/vscode/src/philo_bonus)
==699==  If you believe this happened as a result of a stack
==699==  overflow in your program's main thread (unlikely but
==699==  possible), you can try to increase the size of the
==699==  main thread stack using the --main-stacksize= flag.
==699==  The main thread stack size used in this run was 8388608.
==700== Invalid read of size 8
==700==    at 0x486159D: __new_sem_wait_fast (sem_waitcommon.c:137)
==700==    by 0x486159D: sem_wait@@GLIBC_2.2.5 (sem_wait.c:39)
==700==    by 0x10A45A: not_dead (in /home/vscode/src/philo_bonus)
==700==    by 0x10987E: print_message (in /home/vscode/src/philo_bonus)
==700==    by 0x10A095: thinking (in /home/vscode/src/philo_bonus)
==700==    by 0x10A04C: philo_routine (in /home/vscode/src/philo_bonus)
==700==    by 0x109D32: init_philos (in /home/vscode/src/philo_bonus)
==700==    by 0x109686: main (in /home/vscode/src/philo_bonus)
==700==  Address 0x484a000 is not stack'd, malloc'd or (recently) free'd
==700== 
==700== 
==700== Process terminating with default action of signal 11 (SIGSEGV)
==700==  Access not within mapped region at address 0x484A000
==700==    at 0x486159D: __new_sem_wait_fast (sem_waitcommon.c:137)
==700==    by 0x486159D: sem_wait@@GLIBC_2.2.5 (sem_wait.c:39)
==700==    by 0x10A45A: not_dead (in /home/vscode/src/philo_bonus)
==700==    by 0x10987E: print_message (in /home/vscode/src/philo_bonus)
==700==    by 0x10A095: thinking (in /home/vscode/src/philo_bonus)
==700==    by 0x10A04C: philo_routine (in /home/vscode/src/philo_bonus)
==700==    by 0x109D32: init_philos (in /home/vscode/src/philo_bonus)
==700==    by 0x109686: main (in /home/vscode/src/philo_bonus)
==700==  If you believe this happened as a result of a stack
==700==  overflow in your program's main thread (unlikely but
==700==  possible), you can try to increase the size of the
==700==  main thread stack using the --main-stacksize= flag.
==700==  The main thread stack size used in this run was 8388608.
==699== 
==699== HEAP SUMMARY:
==699==     in use at exit: 1,529 bytes in 9 blocks
==699==   total heap usage: 22 allocs, 13 frees, 2,951 bytes allocated
==699== 
==700== 
==700== HEAP SUMMARY:
==700==     in use at exit: 1,257 bytes in 8 blocks
==700==   total heap usage: 22 allocs, 14 frees, 2,951 bytes allocated
==700== 
==699== LEAK SUMMARY:
==699==    definitely lost: 0 bytes in 0 blocks
==699==    indirectly lost: 0 bytes in 0 blocks
==699==      possibly lost: 816 bytes in 3 blocks
==699==    still reachable: 713 bytes in 6 blocks
==699==         suppressed: 0 bytes in 0 blocks
==699== Rerun with --leak-check=full to see details of leaked memory
==699== 
==699== For lists of detected and suppressed errors, rerun with: -s
==700== LEAK SUMMARY:
==699== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==700==    definitely lost: 0 bytes in 0 blocks
==700==    indirectly lost: 0 bytes in 0 blocks
==700==      possibly lost: 544 bytes in 2 blocks
==700==    still reachable: 713 bytes in 6 blocks
==700==         suppressed: 0 bytes in 0 blocks
==700== Rerun with --leak-check=full to see details of leaked memory
==700== 
==700== For lists of detected and suppressed errors, rerun with: -s
==700== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==703== 
==703== Process terminating with default action of signal 2 (SIGINT)
==701== 
==701== Process terminating with default action of signal 2 (SIGINT)
==698== 
==698== Process terminating with default action of signal 2 (SIGINT)
==697== 
==697== Process terminating with default action of signal 2 (SIGINT)
==703==    at 0x4861454: futex_abstimed_wait_cancelable (futex-internal.h:320)
==703==    by 0x4861454: do_futex_wait.constprop.0 (sem_waitcommon.c:112)
==701==    at 0x4861454: futex_abstimed_wait_cancelable (futex-internal.h:320)
==698==    at 0x4861454: futex_abstimed_wait_cancelable (futex-internal.h:320)
==698==    by 0x4861454: do_futex_wait.constprop.0 (sem_waitcommon.c:112)
==697==    at 0x4954C3A: wait4 (wait4.c:27)
==697==    by 0x10A76A: wait_philos (in /home/vscode/src/philo_bonus)
==703==    by 0x4861547: __new_sem_wait_slow.constprop.0 (sem_waitcommon.c:184)
==703==    by 0x109892: print_message (in /home/vscode/src/philo_bonus)
==701==    by 0x4861454: do_futex_wait.constprop.0 (sem_waitcommon.c:112)
==701==    by 0x4861547: __new_sem_wait_slow.constprop.0 (sem_waitcommon.c:184)
==698==    by 0x4861547: __new_sem_wait_slow.constprop.0 (sem_waitcommon.c:184)
==698==    by 0x109892: print_message (in /home/vscode/src/philo_bonus)
==697==    by 0x10969F: main (in /home/vscode/src/philo_bonus)
==703==    by 0x10A168: sleeping (in /home/vscode/src/philo_bonus)
==703==    by 0x10A040: philo_routine (in /home/vscode/src/philo_bonus)
==701==    by 0x109892: print_message (in /home/vscode/src/philo_bonus)
==698==    by 0x10A1DD: take_left_fork (in /home/vscode/src/philo_bonus)
==698==    by 0x10A249: take_forks (in /home/vscode/src/philo_bonus)
==703==    by 0x109D32: init_philos (in /home/vscode/src/philo_bonus)
==703==    by 0x109686: main (in /home/vscode/src/philo_bonus)
==701==    by 0x10A168: sleeping (in /home/vscode/src/philo_bonus)
==698==    by 0x10A0B8: eating (in /home/vscode/src/philo_bonus)
==698==    by 0x109FD5: philo_routine (in /home/vscode/src/philo_bonus)
==701==    by 0x10A040: philo_routine (in /home/vscode/src/philo_bonus)
==701==    by 0x109D32: init_philos (in /home/vscode/src/philo_bonus)
==698==    by 0x109D32: init_philos (in /home/vscode/src/philo_bonus)
==698==    by 0x109686: main (in /home/vscode/src/philo_bonus)
==701==    by 0x109686: main (in /home/vscode/src/philo_bonus)
==697== 
==697== HEAP SUMMARY:
==697==     in use at exit: 1,111 bytes in 18 blocks
==697==   total heap usage: 18 allocs, 0 frees, 1,111 bytes allocated
==697== 
==697== LEAK SUMMARY:
==697==    definitely lost: 0 bytes in 0 blocks
==697==    indirectly lost: 0 bytes in 0 blocks
==697==      possibly lost: 131 bytes in 4 blocks
==697==    still reachable: 980 bytes in 14 blocks
==697==         suppressed: 0 bytes in 0 blocks
==697== Rerun with --leak-check=full to see details of leaked memory
==697== 
==697== For lists of detected and suppressed errors, rerun with: -s
==697== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==703== 
==703== HEAP SUMMARY:
==703==     in use at exit: 1,927 bytes in 21 blocks
==703==   total heap usage: 22 allocs, 1 frees, 2,951 bytes allocated
==703== 
==698== 
==698== HEAP SUMMARY:
==698==     in use at exit: 1,655 bytes in 20 blocks
==698==   total heap usage: 22 allocs, 2 frees, 2,951 bytes allocated
==698== 
==701== 
==701== HEAP SUMMARY:
==701==     in use at exit: 1,927 bytes in 21 blocks
==701==   total heap usage: 22 allocs, 1 frees, 2,951 bytes allocated
==701== 
==698== LEAK SUMMARY:
==698==    definitely lost: 0 bytes in 0 blocks
==698==    indirectly lost: 0 bytes in 0 blocks
==698==      possibly lost: 675 bytes in 6 blocks
==698==    still reachable: 980 bytes in 14 blocks
==698==         suppressed: 0 bytes in 0 blocks
==698== Rerun with --leak-check=full to see details of leaked memory
==698== 
==698== For lists of detected and suppressed errors, rerun with: -s
==698== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==703== LEAK SUMMARY:
==703==    definitely lost: 0 bytes in 0 blocks
==703==    indirectly lost: 0 bytes in 0 blocks
==703==      possibly lost: 947 bytes in 7 blocks
==703==    still reachable: 980 bytes in 14 blocks
==703==         suppressed: 0 bytes in 0 blocks
==703== Rerun with --leak-check=full to see details of leaked memory
==703== 
==703== For lists of detected and suppressed errors, rerun with: -s
==703== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==701== LEAK SUMMARY:
==701==    definitely lost: 0 bytes in 0 blocks
==701==    indirectly lost: 0 bytes in 0 blocks
==701==      possibly lost: 947 bytes in 7 blocks
==701==    still reachable: 980 bytes in 14 blocks
==701==         suppressed: 0 bytes in 0 blocks
==701== Rerun with --leak-check=full to see details of leaked memory
==701== 
==701== For lists of detected and suppressed errors, rerun with: -s
==701== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
